#! /usr/bin/bash

# Dev Servers
alias lindev7="ssh -A lindev7"
alias lindev8="ssh -A lindev8"
alias lindev9="ssh -A lindev9"
alias lindev10="ssh -A lindev10"
alias lindev11="ssh -A lindev11"
alias lindev12="ssh -A lindev12"
alias lindev13="ssh -A lindev13"
alias lindev14="ssh -A lindev14"
alias lindev15="ssh -A lindev15"
alias lindevprocmaster1="ssh -A lindevprocmaster1"

# Staging Servers
alias linstageweb10="ssh -A linstageweb10"
alias linstageweb11="ssh -A linstageweb11"
alias linstageweb12="ssh -A linstageweb12"
alias linstageweb13="ssh -A linstageweb13"
alias linstageweb14="ssh -A linstageweb14"
alias linstageweb15="ssh -A linstageweb15"

# Live Servers
alias linliveworker1="ssh -A linliveworker1"
alias linliveworker2="ssh -A linliveworker2"
alias linliveworker3="ssh -A linliveworker3"
alias linliveworker4="ssh -A linliveworker4"
alias linliveweb6="ssh -A linliveweb6"
alias linliveweb7="ssh -A linliveweb7"
alias linliveweb8="ssh -A linliveweb8"
alias linliveweb9="ssh -A linliveweb9"
alias linliveweb10="ssh -A linliveweb10"
alias linliveweb11="ssh -A linliveweb11"
alias linlivenationalprocmaster1="ssh -A linlivenationalprocmaster1"

# National Dev Database history file
alias vnatdev="vim /home/jwhiteneck/.psql_history/lindevnationaldb2-linear_national_dev"

# Background colors
defaultbg() {
    echo -e '\e[0;49m'
    clear
}

redbg() {
    echo -e '\e[0;41m'
    clear
}

# Database Connections
# Original code KPK

# Dev Databases
#
# Use: dbd <database_name> -r (MASTER|REPLICA)
#
# Code is wrapping in setting TERM to fix issue with psql in tmux
# psql does not liking using screen-256color for TERM
dbd () {
    temp_term=$TERM
    export TERM=screen
    if [ $1 ]; then
        rtk_database_login.pl -x $*
    else
        rtk_database_login.pl -dxs linear_national -r MASTER
    fi
    export TERM=$temp_term
}

# Dev Databases
alias charterdev="dbd charter"
alias natdev="dbd linear_national_dev"
alias echodev="dbd echostar_dev"
alias attdev="dbd att_dev"
alias mapdev="dbd mapserver"
alias dtvdev="dbd linear_directv_dev"

## Live Databases *** WIP
#dbl () {
#    temp_term=$TERM
#    export TERM=screen
#
#    if [ $1 ]; then
#        rtk_database_login.pl -dxs $*
#    elif [ $2 ]; then
#        psql -h $1 -d $2 -U jwhiteneck
#    else
#        psql -h linlivenationaldb2 -d linear_national_live -U jwhiteneck
#    fi
##        case $1 in
##            linear_national)     dbnl;;
##            charter)             dbcl;;
##            linear_charter)      dblcl;;
##            echostar)            dbel;;
##            linear_schedule)     dbsl;;
##            linear_tv)           dbal;;
##            att)                 dbal;;
##            linear_comcast)      dbcoml;;
##            linear_midcontinent) dbmcl;;
##            telefonica)          dbtl;;
##            linear_mcv)          dbml;;
##            replica)             dbnlr;;
##            replica_a)           dbnlra;;
##            replica_b)           dbnlrb;;
##            *)                   dbnl;;
##        esac
#    export TERM=$temp_term
#}
#alias dbnl='psql -h linlivenationaldb2 -d linear_national_live -U jwhiteneck'
#alias dbnlr='psql -h linlivenationalreportdb1 -d linear_national_live_reporting_replica -U jwhiteneck'
#alias dbnlra='psql -h linlivenationalwebdb1 -d linear_national_live_webdb1_replica -U jwhiteneck'
#alias dbnlrb='psql -h linlivenationalwebdb2 -d linear_national_live_webdb2_replica -U jwhiteneck'
#alias dbel='psql -h linliveechodb2 -d echostar_live -U jwhiteneck'
#alias dbsl='psql -h linlivescheddb1 -d linear_schedule_live -U jwhiteneck'
#alias dbal='psql -h linliveattdb2 -d att_live -U jwhiteneck'
#alias dbmcl='psql -h linliveattdb2 -d linear_midcontinent_live -U jwhiteneck'
#alias dblcl='psql -h linlivecharterdb1 -d linear_charter_live -U jwhiteneck'
#alias dbcl='psql -h linlivecharterdb1 -d charter_live -U jwhiteneck'
#alias dbcoml='psql -h linliveattdb2 -d linear_comcast_live -U jwhiteneck'
#alias dbtl='psql -h linliveattdb2 -d linear_telefonica_live -U jwhiteneck'
#alias dbml='psql -h linliveattdb2 -d linear_mcv_live -U jwhiteneck'

#END KPK DATABASE
# Live Databases
alias charterlive="psql -h linlivecharterdb1 -U jwhiteneck charter_live"
#alias natlive="psql -h linlivenationaldb3 -U jwhiteneck linear_national_live"
alias natlive="dbd linear_national_live"
alias echolive='psql -h linliveechodb2 -U jwhiteneck -d echostar_live'
alias maplive="rtk_database_login.pl -l --config ~/MapserverDatabase.xml -s mapserver"
alias natlivereplica='psql -h linlivenationalreportdb1 -d linear_national_live_reporting_replica -U jwhiteneck'
alias natlivereplicawebdb1='psql -h linlivenationalwebdb1 -d linear_national_live_webdb1_replica -U jwhiteneck'
alias natlivereplicawebdb2='psql -h linlivenationalwebdb2 -d linear_national_live_webdb2_replica -U jwhiteneck'



# Private databases
alias natmb="psql -h lindevprivatedb1 -p 5436 linear_national_live_medibrands -U linear_national"
alias natmb2="psql -h lindevprivatedb1 -p 5438 linear_national_isglin732 -U linear_national"
alias natcd="psql -h lindevprivatedb1 -p 5435 linear_national_isglin755 -U linear_national"

# Servers
alias lindev1="ssh -A jwhiteneck@lindev1"
alias lindev2="ssh -A jwhiteneck@lindev2"
alias lindev3="ssh -A jwhiteneck@lindev3"
alias edev6="ssh -A jwhiteneck@edev6"
alias edev7="ssh -A jwhiteneck@edev7"
alias mapserver="ssh -A jwhiteneck@mapserverliveweb1"
alias linsanmaster1="ssh -A jwhiteneck@linsanmaster1"
alias linsanmaster2="ssh -A jwhiteneck@linsanmaster2"
alias linearworker="ssh -A linear_worker@linsanmaster1"

alias tl2='tmux attach-session -dt lindev2'
alias tirc='tmux attach-session -dt irc'

alias vir='vim perl_lib/RTK/Linear/Pages/Routes.pm'
alias nt=newtree
alias rit="rtk_incr_test.pl -b master"
alias fulllog="tail -f /var/log/httpd/$HOSTNAME-error_log"
alias jfulllog="unbuffer tail -f /var/log/httpd/$HOSTNAME-error_log | grep jwhiteneck | sed -u -e 's/\,\ .*//g'"


alias spiders='git-spider && git-spider-webtest2 && git-spider-webtest4'
alias tspiders='tail -f spider_results.txt -f spider_results_webtest2.txt -f spider_results4.txt'
alias override='cat linear-commit-message.txt && echo "\n" && ack -A1 override'
alias rds="cd ~/work && rtk_dir_status.pl"

alias tmxw="tmx work"
alias tmxl="tmx log"

alias misc="rentask_clock.pl in 183949"
alias dev="rentask_clock.pl in 178792"
alias devcap="rentask_clock.pl in 178207"
alias hire="rentask_clock.pl in 183715"
alias train="rentask_clock.pl in 178206"
alias out="rentask_clock.pl out"
alias cele="rentask_clock.pl in 188159"
alias tableau="rentask_clock.pl in 188796"

alias localtests="DATABASE_XML=/c/work/LocalDatabase.xml LOCAL_TEST_DB=local_att_test python run_tests.py"
# Gearman

alias gearman_myreports="echo -E RTK_SUBSYSTEM=linear SUBSYSTEM_PATH=\$ PWD web_src/linear/services/gearman_my_reports/run \&"

alias gearman_email="echo -E SUBSYSTEM_PATH=$PWD web_src/linear/services/gearman_emailing/run \&"
alias gearman_component="echo -E SUBSYSTEM_PATH=$PWD web_src/linear/services/gearman_component_building/run \&"
alias gearman_myreports_live="echo -E SUBSYSTEM_PATH=$PWD USE_LIVE_DB=1 DATABASE_XML=/storage/home/jwhiteneck/Live_Database.xml web_src/linear/services/gearman_my_reports/run \&"
alias gearman_status="runlive linear_gearman_admin.pl -m list --no-aggregate"

#start_gear() {
#    SUBSYSTEM_PATH=$PWD rundev ./web_src/linear/services/gearman_$*/run -t &> gearman-$*.log&
#}

current_abs_path() {
    echo $PWD |perl -ne 's,^.+/,,; print'
}

start_gear() {
    echo DIR is $(current_abs_path)
    SUBSYSTEM_PATH=/home/jwhiteneck/work/$(current_abs_path) rundev ./web_src/linear/services/gearman_$*/run -t &> gearman-$*.log&
}

alias g_restart='     kill_gearman && rm -f gearman*.log && g_my_reports && sleep 3 &&  tail -f gearman*.log'
alias g_my_reports='  start_gear my_reports'
alias g_cluster='     start_gear cluster_running'
alias g_component='   start_gear component_building'
alias g_email='       start_gear emailing'
alias g_media_brands='start_gear media_brands_reports'
alias g_my_csv='      start_gear my_reports_csv'
alias g_rentpost='    start_gear rentpost'


alias gdol='git diff origin/linear'
alias gdor='git diff origin/release'
alias gruol='git remote update origin/linear'
alias glrl='git log -p --reverse origin/linear..'

newtree () {
    NUM_CHARS=`echo $1|wc -m`
    if [ $NUM_CHARS -gt 40 ]; then
        echo "That name is too long!"
    else
        if [ ! -d $1 ]; then
            export TICKET=`echo $1|sed 's/[^0-9]//g'`
            cd ~/work
            git clone git@bitbucket.org:Rentrak/linear.git $1
            cd $1
            git submodule init
            git submodule update
            git checkout -b $1
            cd ext/shared
            git checkout -b $1
            cd ../..
            make
        else
            cdt $1
        fi
    fi
}


cdt () {
    if [ $1 ]; then
        FRAG=$1
    else
        TICKET=`rentask_current_ticket_no.pl`
        DIR=`find ~/work/ -type d -maxdepth 1 -name \*$TICKET`
        cd $DIR
        return
    fi
    DIR=`find ~/work/ -type d -maxdepth 1 -name \*$FRAG\*`
    if [ -d $DIR ]; then
        cd $DIR
    else
        echo No Checkout for ticket $1
    fi
}

# Perl
alias checkperl="perl516 -cw -MAppropriateLibrary"
